---
local_release_dir: /tmp/releases

# Used to only evaluate vars from download role
skip_downloads: false

# if this is set to true will only download files once. Doesn't work
# on Container Linux by CoreOS unless the download_localhost is true and localhost
# is running another OS type. Default compress level is 1 (fastest).
download_run_once: False
download_compress: 1

# if this is set to true will download container
download_container: True

# if this is set to true, uses the localhost for download_run_once mode
# (requires docker and sudo to access docker). You may want this option for
# local caching of docker images or for Container Linux by CoreOS cluster nodes.
# Otherwise, uses the first node in the kube-master group to store images
# in the download_run_once mode.
download_localhost: False

# Always pull images if set to True. Otherwise check by the repo's tag/digest.
download_always_pull: False

# Some problems may occur when downloading files over https proxy due to ansible bug
# https://github.com/ansible/ansible/issues/32750. Set this variable to False to disable
# SSL validation of get_url module. Note that kubespray will still be performing checksum validation.
download_validate_certs: True

# Use the first kube-master if download_localhost is not set
download_delegate: "{% if download_localhost %}localhost{% else %}{{groups['kube-master'][0]}}{% endif %}"

# Arch of Docker images and needed packages
image_arch: "{{ host_architecture }}"

# Versions
kube_version: v1.12.2
kubeadm_version: "{{ kube_version }}"
etcd_version: 3.2.24
coredns_version: 1.2.2
dnsautoscaler_version: 1.3.0
pod_infra_version: 3.1
weave_version: 2.5.0
# kubernetes image repo define
kube_image_repo: "gcr.io/google-containers"


# Download URLs
kubeadm_download_url: "https://storage.googleapis.com/kubernetes-release/release/{{ kubeadm_version }}/bin/linux/{{ image_arch }}/kubeadm"
hyperkube_download_url: "https://storage.googleapis.com/kubernetes-release/release/{{ kube_version }}/bin/linux/{{ image_arch }}/hyperkube"

# Checksums
hyperkube_checksums:
  v1.12.2:
    amd64   : 566dfed398c20c9944f8999d6370cb584cb8c228b3c5881137b6b3d9306e4b06
    arm     : 4e4fff764bef10b092d17be501eb63d2f8a72ce3c44e17155fe0cb0315384a20
    arm64   : 81e6fdd4e3ed8687a37d9b1830aa43d508fb7d5061c81cb2576a17077382b614
    ppc64le : e0cb541d804edbcdcdb5decb94c7e4a4c15e34ac6a39a289ab55f57353b08e78
    s390x   : b8ae6128ee2de67c42f78b6ea41e01c699a6fe5c74a6522a5395d0e3e8765af6

kubeadm_checksums:
  v1.12.2:
    amd64 : 51bc4bfd1d934a27245111c0ad1f793d5147ed15389415a1509502f23fcfa642
    arm   : 982013a9a3163e64e3cee628d9dbc9550a16e4fdf90e25ad663de85cdb4a5de3

hyperkube_all_checksums : "{{ hyperkube_checksums[kube_version] }}"
hyperkube_binary_checksum: "{{ hyperkube_all_checksums[image_arch] }}"
kubeadm_all_checksums : "{{ kubeadm_checksums[kube_version] }}"
kubeadm_binary_checksum: "{{ kubeadm_all_checksums[image_arch] }}"

# Containers
etcd_image_repo: "k8s.gcr.io/etcd"
etcd_image_tag: "{{ etcd_version }}"

hyperkube_image_repo: "k8s.gcr.io/hyperkube"
hyperkube_image_tag: "{{ kube_version }}"

pod_infra_image_repo: "k8s.gcr.io/pause"
pod_infra_image_tag: "{{ pod_infra_version }}"

weave_kube_image_repo: "docker.io/weaveworks/weave-kube"
weave_kube_image_tag: "{{ weave_version }}"

weave_npc_image_repo: "docker.io/weaveworks/weave-npc"
weave_npc_image_tag: "{{ weave_version }}"

coredns_image_repo: "k8s.gcr.io/coredns"
coredns_image_tag: "{{ coredns_version }}"

dnsautoscaler_image_repo: "gcr.io/google_containers/cluster-proportional-autoscaler-{{ image_arch }}"
dnsautoscaler_image_tag: "{{ dnsautoscaler_version }}"

test_image_repo: busybox
test_image_tag: latest


downloads:
  etcd:
    container: true
    enabled: true
    version: "{{ etcd_version }}"
    repo: "{{ etcd_image_repo }}"
    tag: "{{ etcd_image_tag }}"
    sha256: "{{ etcd_digest_checksum|default(None) }}"
    groups:
      - etcd

  kubeadm:
    enabled: "{{ kubeadm_enabled }}"
    file: true
    version: "{{ kubeadm_version }}"
    dest: "{{local_release_dir}}/kubeadm"
    sha256: "{{ kubeadm_binary_checksum }}"
    url: "{{ kubeadm_download_url }}"
    unarchive: false
    owner: "root"
    mode: "0755"
    groups:
      - k8s-cluster

  hyperkube:
    enabled: "{{ kubeadm_enabled == false }}"
    container: true
    repo: "{{ hyperkube_image_repo }}"
    tag: "{{ hyperkube_image_tag }}"
    sha256: "{{ hyperkube_digest_checksum|default(None) }}"
    groups:
      - k8s-cluster

  hyperkube_file:
    enabled: true
    file: true
    version: "{{ kube_version }}"
    dest: "{{local_release_dir}}/hyperkube"
    sha256: "{{ hyperkube_binary_checksum }}"
    url: "{{ hyperkube_download_url }}"
    unarchive: false
    owner: "root"
    mode: "0755"
    groups:
      - k8s-cluster


  weave_kube:
    enabled: "{{ kube_network_plugin == 'weave' }}"
    container: true
    repo: "{{ weave_kube_image_repo }}"
    tag: "{{ weave_kube_image_tag }}"
    sha256: "{{ weave_kube_digest_checksum|default(None) }}"
    groups:
      - k8s-cluster

  weave_npc:
    enabled: "{{ kube_network_plugin == 'weave' }}"
    container: true
    repo: "{{ weave_npc_image_repo }}"
    tag: "{{ weave_npc_image_tag }}"
    sha256: "{{ weave_npc_digest_checksum|default(None) }}"
    groups:
      - k8s-cluster

  pod_infra:
    enabled: true
    container: true
    repo: "{{ pod_infra_image_repo }}"
    tag: "{{ pod_infra_image_tag }}"
    sha256: "{{ pod_infra_digest_checksum|default(None) }}"
    groups:
      - k8s-cluster

  coredns:
    enabled: "{{ dns_mode in ['coredns', 'coredns_dual'] }}"
    container: true
    repo: "{{ coredns_image_repo }}"
    tag: "{{ coredns_image_tag }}"
    sha256: "{{ coredns_digest_checksum|default(None) }}"
    groups:
      - kube-node

  testbox:
    enabled: false
    container: true
    repo: "{{ test_image_repo }}"
    tag: "{{ test_image_tag }}"
    sha256: "{{ testbox_digest_checksum|default(None) }}"

download_defaults:
  container: false
  file: false
  repo: None
  tag: None
  enabled: false
  dest: None
  version: None
  url: None
  unarchive: false
  owner: kube
  mode: None
